name: Rust CI/CD

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Run Tests
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
        run: cargo test

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Release
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
        run: cargo build --release
        # Artifact path: target/release

  rustdoc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Generate Documentation
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
        run: cargo doc
        # Artifact path: target/doc

  publish:
    runs-on: ubuntu-latest
    needs: [build, rustdoc]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Create Public Directory
        run: mkdir public

      - name: Copy Documentation
        run: mv target/doc public/doc

      - name: Copy Binary
        run: mv target/release/* public/
        # Assuming the binary file has a predictable name

      - name: Archive Public Directory
        uses: actions/upload-artifact@v2
        with:
          name: public
          path: public

